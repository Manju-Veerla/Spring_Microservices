services:
  # Database Services
  user-db:
    image: mysql:8.0
    container_name: user-db
    environment:
      MYSQL_DATABASE: user_db
      MYSQL_ROOT_PASSWORD: root
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - user-db-data:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  department-db:
    image: mysql:8.0
    container_name: department-db
    environment:
      MYSQL_DATABASE: department_db
      MYSQL_ROOT_PASSWORD: root
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - dept-db-data:/var/lib/mysql
    ports:
      - "3308:3306"
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  eureka-server:
    build:
      context: ./EurekaService
      dockerfile: Dockerfile
    image: eurekaservice:local
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - microservices-network


  api-gateway:
    build:
      context: ./APIGatewayService
      dockerfile: Dockerfile
    image: apigatewayservice:local
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka-server:
        condition: service_started
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  department-service:
    build:
      context: ./DepartmentService
      dockerfile: Dockerfile
    image: deptservice:local
    container_name: department-service
    ports:
      - "9001:9001"
    depends_on:
      eureka-server:
        condition: service_started
      department-db:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://department-db:3306/department_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9001/actuator/health"]
      interval: 30s
      timeout: 10s

  auth-service:
    build:
      context: ./AuthenticationService
      dockerfile: Dockerfile
    image: authservice:local
    container_name: auth-service
    ports:
      - "9003:9003"
    depends_on:
      eureka-server:
        condition: service_started
      user-service:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_APPLICATION_NAME=auth-service
      - AUTH_APP_JWT_SECRET=5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
      - AUTH_APP_JWT_EXPIRATION_MS=3600000
      - USER_SERVICE_URL=http://user-service:9002
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9003/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  user-service:
    build:
      context: ./UserService
      dockerfile: Dockerfile
    image: userservice:local
    container_name: user-service
    ports:
      - "9002:9002"
    depends_on:
      eureka-server:
        condition: service_started
      user-db:
        condition: service_healthy
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka-server:8761/eureka/
      - SPRING_DATASOURCE_URL=jdbc:mysql://user-db:3306/user_db?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL-AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  microservices-network:
    driver: bridge

volumes:
  user-db-data:
  dept-db-data:
